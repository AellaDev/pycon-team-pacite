{"filter":false,"title":"product.py","tooltip":"/python-serverless-pacite2/models/product.py","undoManager":{"mark":98,"position":98,"stack":[[{"start":{"row":0,"column":0},"end":{"row":89,"column":22},"action":"insert","lines":["from decimal import Decimal","import json","from gateways.dynamodb import DynamoDBGateway","from gateways.sqs import SQSGateway","from gateways.s3 import S3Gateway","from utils.helpers import generate_code, DecimalEncoder","","class ProductModel:","    \"\"\"Product business logic and operations\"\"\"","    ","    def __init__(self):","        self.table_name = \"products-pacite2\"","        self.dynamodb = DynamoDBGateway(self.table_name)","        self.sqs = SQSGateway(\"products-bucket-pacite2\")","        self.s3 = S3Gateway(\"products-bucket-pacite2\")","    ","    def get_all(self):","        \"\"\"Get all products from database\"\"\"","        return self.dynamodb.scan()","    ","    def create(self, product_data):","        \"\"\"Create a new product\"\"\"","        # Validate product data here if needed","        if not self._validate_product(product_data):","            raise ValueError(\"Invalid product data\")","            ","        # Convert to Decimal for DynamoDB","        product_data = self._prepare_for_db(product_data)","        ","        # Save to DynamoDB","        self.dynamodb.put_item(product_data)","        ","        # Send to SQS","        self.sqs.send_message(json.dumps(product_data, cls=DecimalEncoder))","        ","        return product_data","    ","    def batch_create_from_s3_event(self, event):","        \"\"\"Process S3 upload event and create products from CSV\"\"\"","        # Extract file details from event","        csv_data = self.s3.download_and_read_csv_from_event(event)","        ","        # Process each row and save to DynamoDB","        for row in csv_data:","            if self._validate_product(row):","                self.dynamodb.put_item(row)","    ","    def process_sqs_messages(self, event):","        \"\"\"Process SQS messages and create CSV file\"\"\"","        # Define CSV fields","        fieldnames = [\"product_id\", \"product_name\", \"price\", \"quantity\"]","        ","        # Generate unique filename","        file_prefix = generate_code(\"pycon_\", 8)","        filename = f'product_created_{file_prefix}.csv'","        ","        # Extract data from SQS messages","        products = []","        for record in event.get(\"Records\", []):","            try:","                product = json.loads(record[\"body\"])","                products.append(product)","            except (json.JSONDecodeError, KeyError):","                continue","                ","        # Create and upload CSV","        self.s3.create_and_upload_csv(filename, fieldnames, products)","        ","        return filename","    ","    def _validate_product(self, product):","        \"\"\"Validate product data\"\"\"","        required_keys = [\"product_id\", \"product_name\", \"price\", \"quantity\"]","        return all(key in product for key in required_keys)","    ","    def _prepare_for_db(self, product):","        \"\"\"Prepare product data for DynamoDB (convert types)\"\"\"","        if \"price\" in product and not isinstance(product[\"price\"], Decimal):","            try:","                product[\"price\"] = Decimal(str(product[\"price\"]))","            except:","                pass","                ","        if \"quantity\" in product and not isinstance(product[\"quantity\"], Decimal):","            try:","                product[\"quantity\"] = Decimal(str(product[\"quantity\"]))","            except:","                pass","                ","        return product"],"id":145}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":47},"action":"remove","lines":["    \"\"\"Product business logic and operations\"\"\""],"id":146},{"start":{"row":7,"column":19},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":19,"column":35},"end":{"row":20,"column":34},"action":"remove","lines":["","        \"\"\"Create a new product\"\"\""],"id":147}],[{"start":{"row":15,"column":22},"end":{"row":16,"column":44},"action":"remove","lines":["","        \"\"\"Get all products from database\"\"\""],"id":148}],[{"start":{"row":34,"column":48},"end":{"row":35,"column":66},"action":"remove","lines":["","        \"\"\"Process S3 upload event and create products from CSV\"\"\""],"id":149}],[{"start":{"row":43,"column":42},"end":{"row":44,"column":54},"action":"remove","lines":["","        \"\"\"Process SQS messages and create CSV file\"\"\""],"id":150}],[{"start":{"row":65,"column":41},"end":{"row":66,"column":35},"action":"remove","lines":["","        \"\"\"Validate product data\"\"\""],"id":151},{"start":{"row":65,"column":41},"end":{"row":65,"column":42},"action":"insert","lines":["\\"]}],[{"start":{"row":65,"column":41},"end":{"row":65,"column":42},"action":"remove","lines":["\\"],"id":152}],[{"start":{"row":69,"column":39},"end":{"row":70,"column":63},"action":"remove","lines":["","        \"\"\"Prepare product data for DynamoDB (convert types)\"\"\""],"id":153}],[{"start":{"row":12,"column":40},"end":{"row":12,"column":46},"action":"remove","lines":["bucket"],"id":154},{"start":{"row":12,"column":40},"end":{"row":12,"column":41},"action":"insert","lines":["s"]},{"start":{"row":12,"column":41},"end":{"row":12,"column":42},"action":"insert","lines":["q"]},{"start":{"row":12,"column":42},"end":{"row":12,"column":43},"action":"insert","lines":["s"]}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "],"id":155},{"start":{"row":16,"column":35},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":16,"column":35},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":156},{"start":{"row":17,"column":0},"end":{"row":17,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":18,"column":35},"end":{"row":19,"column":46},"action":"remove","lines":["","        # Validate product data here if needed"],"id":157}],[{"start":{"row":21,"column":12},"end":{"row":22,"column":41},"action":"remove","lines":["","        # Convert to Decimal for DynamoDB"],"id":158}],[{"start":{"row":23,"column":8},"end":{"row":24,"column":26},"action":"remove","lines":["","        # Save to DynamoDB"],"id":159}],[{"start":{"row":25,"column":8},"end":{"row":26,"column":21},"action":"remove","lines":["","        # Send to SQS"],"id":160}],[{"start":{"row":30,"column":48},"end":{"row":31,"column":41},"action":"remove","lines":["","        # Extract file details from event"],"id":161}],[{"start":{"row":32,"column":8},"end":{"row":33,"column":47},"action":"remove","lines":["","        # Process each row and save to DynamoDB"],"id":162}],[{"start":{"row":37,"column":42},"end":{"row":38,"column":27},"action":"remove","lines":["","        # Define CSV fields"],"id":163}],[{"start":{"row":39,"column":8},"end":{"row":40,"column":34},"action":"remove","lines":["","        # Generate unique filename"],"id":164}],[{"start":{"row":42,"column":8},"end":{"row":43,"column":40},"action":"remove","lines":["","        # Extract data from SQS messages"],"id":165}],[{"start":{"row":50,"column":16},"end":{"row":51,"column":31},"action":"remove","lines":["","        # Create and upload CSV"],"id":166}],[{"start":{"row":70,"column":20},"end":{"row":71,"column":0},"action":"insert","lines":["",""],"id":167},{"start":{"row":71,"column":0},"end":{"row":71,"column":16},"action":"insert","lines":["                "]},{"start":{"row":71,"column":12},"end":{"row":71,"column":16},"action":"remove","lines":["    "]},{"start":{"row":71,"column":12},"end":{"row":72,"column":0},"action":"insert","lines":["",""]},{"start":{"row":72,"column":0},"end":{"row":72,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":72,"column":8},"end":{"row":72,"column":12},"action":"remove","lines":["    "],"id":168},{"start":{"row":72,"column":4},"end":{"row":72,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":72,"column":4},"end":{"row":81,"column":77},"action":"insert","lines":["def get_one(self, product_id):","        # Example using DynamoDB (adjust for your database)","        import boto3","        from boto3.dynamodb.conditions import Key","","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","","        response = table.get_item(Key={\"id\": product_id})","        return response.get(\"Item\")  # Returns None if the item doesn't exist"],"id":169}],[{"start":{"row":73,"column":8},"end":{"row":73,"column":59},"action":"remove","lines":["# Example using DynamoDB (adjust for your database)"],"id":170},{"start":{"row":73,"column":4},"end":{"row":73,"column":8},"action":"remove","lines":["    "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":4},"action":"remove","lines":["    "]},{"start":{"row":72,"column":34},"end":{"row":73,"column":0},"action":"remove","lines":["",""]},{"start":{"row":72,"column":33},"end":{"row":72,"column":34},"action":"remove","lines":[":"]}],[{"start":{"row":72,"column":33},"end":{"row":72,"column":34},"action":"insert","lines":[":"],"id":171}],[{"start":{"row":80,"column":35},"end":{"row":81,"column":16},"action":"remove","lines":["  # Returns None if the item doesn't exist","                "],"id":172}],[{"start":{"row":80,"column":35},"end":{"row":81,"column":0},"action":"insert","lines":["",""],"id":173},{"start":{"row":81,"column":0},"end":{"row":81,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":82,"column":0},"end":{"row":82,"column":22},"action":"remove","lines":["        return product"],"id":174}],[{"start":{"row":70,"column":20},"end":{"row":71,"column":0},"action":"insert","lines":["",""],"id":175},{"start":{"row":71,"column":0},"end":{"row":71,"column":16},"action":"insert","lines":["                "]},{"start":{"row":71,"column":12},"end":{"row":71,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":71,"column":12},"end":{"row":71,"column":34},"action":"insert","lines":["        return product"],"id":176}],[{"start":{"row":71,"column":11},"end":{"row":71,"column":20},"action":"remove","lines":["         "],"id":177}],[{"start":{"row":71,"column":10},"end":{"row":71,"column":11},"action":"remove","lines":[" "],"id":178},{"start":{"row":71,"column":9},"end":{"row":71,"column":10},"action":"remove","lines":[" "]},{"start":{"row":71,"column":8},"end":{"row":71,"column":9},"action":"remove","lines":[" "]}],[{"start":{"row":80,"column":40},"end":{"row":80,"column":41},"action":"insert","lines":["p"],"id":179},{"start":{"row":80,"column":41},"end":{"row":80,"column":42},"action":"insert","lines":["r"]},{"start":{"row":80,"column":42},"end":{"row":80,"column":43},"action":"insert","lines":["o"]},{"start":{"row":80,"column":43},"end":{"row":80,"column":44},"action":"insert","lines":["d"]},{"start":{"row":80,"column":44},"end":{"row":80,"column":45},"action":"insert","lines":["u"]},{"start":{"row":80,"column":45},"end":{"row":80,"column":46},"action":"insert","lines":["c"]},{"start":{"row":80,"column":46},"end":{"row":80,"column":47},"action":"insert","lines":["t"]},{"start":{"row":80,"column":47},"end":{"row":80,"column":48},"action":"insert","lines":["_"]}],[{"start":{"row":18,"column":4},"end":{"row":28,"column":27},"action":"remove","lines":["def create(self, product_data):","        if not self._validate_product(product_data):","            raise ValueError(\"Invalid product data\")","            ","        product_data = self._prepare_for_db(product_data)","        ","        self.dynamodb.put_item(product_data)","        ","        self.sqs.send_message(json.dumps(product_data, cls=DecimalEncoder))","        ","        return product_data"],"id":180},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":8},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":17,"column":4},"end":{"row":17,"column":8},"action":"remove","lines":["    "],"id":181},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "]},{"start":{"row":16,"column":35},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":4},"end":{"row":23,"column":43},"action":"remove","lines":["def batch_create_from_s3_event(self, event):","        csv_data = self.s3.download_and_read_csv_from_event(event)","        ","        for row in csv_data:","            if self._validate_product(row):","                self.dynamodb.put_item(row)"],"id":182},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":4},"end":{"row":18,"column":0},"action":"remove","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "]},{"start":{"row":16,"column":35},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":54,"column":32},"end":{"row":54,"column":33},"action":"insert","lines":[","],"id":183}],[{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"insert","lines":[" "],"id":184},{"start":{"row":54,"column":34},"end":{"row":54,"column":35},"action":"insert","lines":["p"]},{"start":{"row":54,"column":35},"end":{"row":54,"column":36},"action":"insert","lines":["r"]},{"start":{"row":54,"column":36},"end":{"row":54,"column":37},"action":"insert","lines":["o"]},{"start":{"row":54,"column":37},"end":{"row":54,"column":38},"action":"insert","lines":["d"]},{"start":{"row":54,"column":38},"end":{"row":54,"column":39},"action":"insert","lines":["u"]},{"start":{"row":54,"column":39},"end":{"row":54,"column":40},"action":"insert","lines":["c"]},{"start":{"row":54,"column":40},"end":{"row":54,"column":41},"action":"insert","lines":["t"]}],[{"start":{"row":54,"column":41},"end":{"row":54,"column":42},"action":"insert","lines":[" "],"id":185},{"start":{"row":54,"column":42},"end":{"row":54,"column":43},"action":"insert","lines":["-"]}],[{"start":{"row":54,"column":42},"end":{"row":54,"column":43},"action":"remove","lines":["-"],"id":186},{"start":{"row":54,"column":41},"end":{"row":54,"column":42},"action":"remove","lines":[" "]}],[{"start":{"row":54,"column":41},"end":{"row":54,"column":42},"action":"insert","lines":["_"],"id":187},{"start":{"row":54,"column":42},"end":{"row":54,"column":43},"action":"insert","lines":["n"]},{"start":{"row":54,"column":43},"end":{"row":54,"column":44},"action":"insert","lines":["a"]},{"start":{"row":54,"column":44},"end":{"row":54,"column":45},"action":"insert","lines":["m"]},{"start":{"row":54,"column":45},"end":{"row":54,"column":46},"action":"insert","lines":["e"]}],[{"start":{"row":62,"column":35},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":188},{"start":{"row":63,"column":0},"end":{"row":63,"column":8},"action":"insert","lines":["        "]},{"start":{"row":63,"column":8},"end":{"row":64,"column":0},"action":"insert","lines":["",""]},{"start":{"row":64,"column":0},"end":{"row":64,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":64,"column":4},"end":{"row":64,"column":8},"action":"remove","lines":["    "],"id":189}],[{"start":{"row":64,"column":4},"end":{"row":64,"column":5},"action":"insert","lines":["d"],"id":190},{"start":{"row":64,"column":5},"end":{"row":64,"column":6},"action":"insert","lines":["e"]},{"start":{"row":64,"column":6},"end":{"row":64,"column":7},"action":"insert","lines":["f"]}],[{"start":{"row":64,"column":7},"end":{"row":64,"column":8},"action":"insert","lines":[" "],"id":191},{"start":{"row":64,"column":8},"end":{"row":64,"column":9},"action":"insert","lines":["g"]},{"start":{"row":64,"column":9},"end":{"row":64,"column":10},"action":"insert","lines":["r"]},{"start":{"row":64,"column":10},"end":{"row":64,"column":11},"action":"insert","lines":["t"]}],[{"start":{"row":64,"column":11},"end":{"row":64,"column":12},"action":"insert","lines":["_"],"id":192},{"start":{"row":64,"column":12},"end":{"row":64,"column":13},"action":"insert","lines":["b"]},{"start":{"row":64,"column":13},"end":{"row":64,"column":14},"action":"insert","lines":["y"]},{"start":{"row":64,"column":14},"end":{"row":64,"column":15},"action":"insert","lines":["_"]},{"start":{"row":64,"column":15},"end":{"row":64,"column":16},"action":"insert","lines":["n"]},{"start":{"row":64,"column":16},"end":{"row":64,"column":17},"action":"insert","lines":["a"]},{"start":{"row":64,"column":17},"end":{"row":64,"column":18},"action":"insert","lines":["m"]},{"start":{"row":64,"column":18},"end":{"row":64,"column":19},"action":"insert","lines":["e"]}],[{"start":{"row":64,"column":19},"end":{"row":64,"column":21},"action":"insert","lines":["()"],"id":193}],[{"start":{"row":64,"column":20},"end":{"row":64,"column":21},"action":"insert","lines":["s"],"id":194},{"start":{"row":64,"column":21},"end":{"row":64,"column":22},"action":"insert","lines":["e"]},{"start":{"row":64,"column":22},"end":{"row":64,"column":23},"action":"insert","lines":["l"]},{"start":{"row":64,"column":23},"end":{"row":64,"column":24},"action":"insert","lines":["f"]},{"start":{"row":64,"column":24},"end":{"row":64,"column":25},"action":"insert","lines":[","]}],[{"start":{"row":64,"column":25},"end":{"row":64,"column":26},"action":"insert","lines":[" "],"id":195},{"start":{"row":64,"column":26},"end":{"row":64,"column":27},"action":"insert","lines":["P"]}],[{"start":{"row":64,"column":26},"end":{"row":64,"column":27},"action":"remove","lines":["P"],"id":196}],[{"start":{"row":64,"column":26},"end":{"row":64,"column":27},"action":"insert","lines":["o"],"id":197},{"start":{"row":64,"column":27},"end":{"row":64,"column":28},"action":"insert","lines":["r"]}],[{"start":{"row":64,"column":27},"end":{"row":64,"column":28},"action":"remove","lines":["r"],"id":198},{"start":{"row":64,"column":26},"end":{"row":64,"column":27},"action":"remove","lines":["o"]}],[{"start":{"row":54,"column":34},"end":{"row":54,"column":46},"action":"remove","lines":["product_name"],"id":199}],[{"start":{"row":64,"column":26},"end":{"row":64,"column":38},"action":"insert","lines":["product_name"],"id":200}],[{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"remove","lines":[" "],"id":201},{"start":{"row":54,"column":32},"end":{"row":54,"column":33},"action":"remove","lines":[","]}],[{"start":{"row":64,"column":39},"end":{"row":64,"column":40},"action":"insert","lines":[":"],"id":202}],[{"start":{"row":64,"column":40},"end":{"row":65,"column":0},"action":"insert","lines":["",""],"id":203},{"start":{"row":65,"column":0},"end":{"row":65,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":64,"column":9},"end":{"row":64,"column":10},"action":"remove","lines":["r"],"id":204}],[{"start":{"row":64,"column":9},"end":{"row":64,"column":10},"action":"insert","lines":["e"],"id":205}],[{"start":{"row":65,"column":8},"end":{"row":72,"column":35},"action":"insert","lines":["import boto3","        from boto3.dynamodb.conditions import Key","","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","","        response = table.get_item(Key={\"product_id\": product_id})","        return response.get(\"Item\")"],"id":206}],[{"start":{"row":71,"column":49},"end":{"row":71,"column":50},"action":"remove","lines":["d"],"id":207},{"start":{"row":71,"column":48},"end":{"row":71,"column":49},"action":"remove","lines":["i"]}],[{"start":{"row":71,"column":48},"end":{"row":71,"column":49},"action":"insert","lines":["n"],"id":208},{"start":{"row":71,"column":49},"end":{"row":71,"column":50},"action":"insert","lines":["a"]},{"start":{"row":71,"column":50},"end":{"row":71,"column":51},"action":"insert","lines":["m"]},{"start":{"row":71,"column":51},"end":{"row":71,"column":52},"action":"insert","lines":["e"]}],[{"start":{"row":71,"column":64},"end":{"row":71,"column":65},"action":"remove","lines":["d"],"id":209},{"start":{"row":71,"column":63},"end":{"row":71,"column":64},"action":"remove","lines":["i"]}],[{"start":{"row":71,"column":63},"end":{"row":71,"column":64},"action":"insert","lines":["n"],"id":210},{"start":{"row":71,"column":64},"end":{"row":71,"column":65},"action":"insert","lines":["a"]},{"start":{"row":71,"column":65},"end":{"row":71,"column":66},"action":"insert","lines":["m"]},{"start":{"row":71,"column":66},"end":{"row":71,"column":67},"action":"insert","lines":["e"]}],[{"start":{"row":73,"column":4},"end":{"row":73,"column":8},"action":"remove","lines":["    "],"id":211},{"start":{"row":73,"column":0},"end":{"row":73,"column":4},"action":"remove","lines":["    "]},{"start":{"row":72,"column":35},"end":{"row":73,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":64,"column":4},"end":{"row":72,"column":35},"action":"remove","lines":["def get_by_name(self, product_name):","        import boto3","        from boto3.dynamodb.conditions import Key","","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","","        response = table.get_item(Key={\"product_name\": product_name})","        return response.get(\"Item\")"],"id":212},{"start":{"row":64,"column":4},"end":{"row":77,"column":0},"action":"insert","lines":["def get_by_name(self, product_name):","    import boto3","    from boto3.dynamodb.conditions import Attr","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    response = table.scan(","        FilterExpression=Attr(\"product_name\").eq(product_name)","    )","","    items = response.get(\"Items\", [])","    return items[0] if items else None",""]}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"insert","lines":["    "],"id":213},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"insert","lines":["    "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"insert","lines":["    "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":4},"action":"insert","lines":["    "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["    "]},{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"insert","lines":["    "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":4},"action":"insert","lines":["    "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":4},"action":"insert","lines":["    "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":4},"action":"insert","lines":["    "]},{"start":{"row":75,"column":0},"end":{"row":75,"column":4},"action":"insert","lines":["    "]},{"start":{"row":76,"column":0},"end":{"row":76,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":76,"column":42},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":214},{"start":{"row":77,"column":0},"end":{"row":77,"column":8},"action":"insert","lines":["        "]},{"start":{"row":77,"column":8},"end":{"row":78,"column":0},"action":"insert","lines":["",""]},{"start":{"row":78,"column":0},"end":{"row":78,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":78,"column":4},"end":{"row":78,"column":8},"action":"remove","lines":["    "],"id":215}],[{"start":{"row":78,"column":3},"end":{"row":100,"column":104},"action":"insert","lines":[" def purchase_product(self, product_id, quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        item = self.get_one(product_id)","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","        ","        stock = item[\"quantity\"]","        if quantity > stock:","            return {\"status\": \"error\", \"message\": f\"Only {stock} units available\"}","        ","        new_stock = stock - quantity","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_stock\",","            ExpressionAttributeValues={\":new_stock\": new_stock}","        )","        ","        return {\"status\": \"success\", \"message\": f\"Purchased {quantity} units of {item['product_name']}\"}"],"id":216}],[{"start":{"row":78,"column":4},"end":{"row":101,"column":0},"action":"remove","lines":["def purchase_product(self, product_id, quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        item = self.get_one(product_id)","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","        ","        stock = item[\"quantity\"]","        if quantity > stock:","            return {\"status\": \"error\", \"message\": f\"Only {stock} units available\"}","        ","        new_stock = stock - quantity","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_stock\",","            ExpressionAttributeValues={\":new_stock\": new_stock}","        )","        ","        return {\"status\": \"success\", \"message\": f\"Purchased {quantity} units of {item['product_name']}\"} ",""],"id":217},{"start":{"row":78,"column":4},"end":{"row":89,"column":0},"action":"insert","lines":["def update_quantity(self, product_id, new_quantity):","    import boto3","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    table.update_item(","        Key={\"product_id\": product_id},","        UpdateExpression=\"SET quantity = :q\",","        ExpressionAttributeValues={\":q\": new_quantity}","    )",""]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "],"id":218},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":4},"action":"insert","lines":["    "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":4},"action":"insert","lines":["    "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":4},"action":"insert","lines":["    "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"insert","lines":["    "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":88,"column":9},"end":{"row":89,"column":0},"action":"insert","lines":["",""],"id":219},{"start":{"row":89,"column":0},"end":{"row":89,"column":8},"action":"insert","lines":["        "]},{"start":{"row":89,"column":8},"end":{"row":90,"column":0},"action":"insert","lines":["",""]},{"start":{"row":90,"column":0},"end":{"row":90,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":8},"action":"remove","lines":["    "],"id":220}],[{"start":{"row":90,"column":4},"end":{"row":121,"column":0},"action":"insert","lines":["def purchase_product(self, product_id, purchase_quantity):","    import boto3","    from boto3.dynamodb.conditions import Key","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    # Get the current stock","    response = table.get_item(Key={\"product_id\": product_id})","    item = response.get(\"Item\")","","    if not item:","        return {\"status\": \"error\", \"message\": \"Product not found\"}","","    current_stock = int(item[\"quantity\"])","","    # Check if stock is enough","    if purchase_quantity > current_stock:","        return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","","    # Deduct the purchased quantity","    new_stock = current_stock - purchase_quantity","","    # Update the stock in DynamoDB","    table.update_item(","        Key={\"product_id\": product_id},","        UpdateExpression=\"SET quantity = :new_quantity\",","        ExpressionAttributeValues={\":new_quantity\": new_stock}","    )","","    return {\"status\": \"success\", \"message\": \"Purchase successful\", \"remaining_stock\": new_stock}",""],"id":221}],[{"start":{"row":105,"column":0},"end":{"row":106,"column":30},"action":"remove","lines":["","    # Check if stock is enough"],"id":222}],[{"start":{"row":111,"column":0},"end":{"row":112,"column":34},"action":"remove","lines":["","    # Update the stock in DynamoDB"],"id":223}],[{"start":{"row":108,"column":0},"end":{"row":109,"column":35},"action":"remove","lines":["","    # Deduct the purchased quantity"],"id":224}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "],"id":225},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":4},"action":"insert","lines":["    "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"insert","lines":["    "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":4},"action":"insert","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"insert","lines":["    "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":4},"action":"insert","lines":["    "]},{"start":{"row":110,"column":0},"end":{"row":110,"column":4},"action":"insert","lines":["    "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["    "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"insert","lines":["    "]},{"start":{"row":113,"column":0},"end":{"row":113,"column":4},"action":"insert","lines":["    "]},{"start":{"row":114,"column":0},"end":{"row":114,"column":4},"action":"insert","lines":["    "]},{"start":{"row":115,"column":0},"end":{"row":115,"column":4},"action":"insert","lines":["    "]},{"start":{"row":116,"column":0},"end":{"row":116,"column":4},"action":"insert","lines":["    "]},{"start":{"row":117,"column":0},"end":{"row":117,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":96,"column":0},"end":{"row":97,"column":31},"action":"remove","lines":["    ","        # Get the current stock"],"id":226},{"start":{"row":95,"column":47},"end":{"row":96,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":99,"column":0},"end":{"row":100,"column":70},"action":"remove","lines":["        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}"],"id":227},{"start":{"row":98,"column":4},"end":{"row":99,"column":0},"action":"remove","lines":["",""]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"remove","lines":["    "]},{"start":{"row":97,"column":35},"end":{"row":98,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":100,"column":4},"end":{"row":102,"column":79},"action":"remove","lines":["","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}"],"id":228},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"remove","lines":["    "]},{"start":{"row":99,"column":45},"end":{"row":100,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":99,"column":45},"end":{"row":100,"column":4},"action":"remove","lines":["","    "],"id":229}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"remove","lines":["    "],"id":230},{"start":{"row":97,"column":35},"end":{"row":98,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"remove","lines":["    "],"id":231},{"start":{"row":99,"column":53},"end":{"row":100,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":105,"column":0},"end":{"row":107,"column":0},"action":"remove","lines":["    ","        return {\"status\": \"success\", \"message\": \"Purchase successful\", \"remaining_stock\": new_stock}",""],"id":232},{"start":{"row":104,"column":9},"end":{"row":105,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":90,"column":4},"end":{"row":104,"column":9},"action":"remove","lines":["def purchase_product(self, product_id, purchase_quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","        response = table.get_item(Key={\"product_id\": product_id})","        item = response.get(\"Item\")","        current_stock = int(item[\"quantity\"])","        new_stock = current_stock - purchase_quantity","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )"],"id":233},{"start":{"row":90,"column":4},"end":{"row":118,"column":0},"action":"insert","lines":["def purchase_product(self, product_id, purchase_quantity):","    import boto3","    from boto3.dynamodb.conditions import Key","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    # Get the current stock","    response = table.get_item(Key={\"product_id\": product_id})","    item = response.get(\"Item\")","","    if not item:","        return {\"status\": \"error\", \"message\": \"Product not found\"}","","    current_stock = int(item[\"quantity\"])","","    if purchase_quantity > current_stock:","        return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","","    new_stock = current_stock - purchase_quantity","","    table.update_item(","        Key={\"product_id\": product_id},","        UpdateExpression=\"SET quantity = :new_quantity\",","        ExpressionAttributeValues={\":new_quantity\": new_stock}","    )","","    return {\"status\": \"success\", \"remaining_stock\": new_stock}",""]}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "],"id":234},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":4},"action":"insert","lines":["    "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"insert","lines":["    "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":4},"action":"insert","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"insert","lines":["    "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":4},"action":"insert","lines":["    "]},{"start":{"row":110,"column":0},"end":{"row":110,"column":4},"action":"insert","lines":["    "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["    "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"insert","lines":["    "]},{"start":{"row":113,"column":0},"end":{"row":113,"column":4},"action":"insert","lines":["    "]},{"start":{"row":114,"column":0},"end":{"row":114,"column":4},"action":"insert","lines":["    "]},{"start":{"row":115,"column":0},"end":{"row":115,"column":4},"action":"insert","lines":["    "]},{"start":{"row":116,"column":0},"end":{"row":116,"column":4},"action":"insert","lines":["    "]},{"start":{"row":117,"column":0},"end":{"row":117,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":78,"column":4},"end":{"row":117,"column":66},"action":"remove","lines":["def update_quantity(self, product_id, new_quantity):","        import boto3","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :q\",","            ExpressionAttributeValues={\":q\": new_quantity}","        )","        ","    def purchase_product(self, product_id, purchase_quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        # Get the current stock","        response = table.get_item(Key={\"product_id\": product_id})","        item = response.get(\"Item\")","    ","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","    ","        current_stock = int(item[\"quantity\"])","    ","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","    ","        new_stock = current_stock - purchase_quantity","    ","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )","    ","        return {\"status\": \"success\", \"remaining_stock\": new_stock}"],"id":235},{"start":{"row":78,"column":4},"end":{"row":106,"column":0},"action":"insert","lines":["def purchase_product(self, product_id, purchase_quantity):","    import boto3","    from boto3.dynamodb.conditions import Key","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    # Get the current stock","    response = table.get_item(Key={\"product_id\": product_id})","    item = response.get(\"Item\")","","    if not item:","        return {\"status\": \"error\", \"message\": \"Product not found\"}","","    current_stock = int(item[\"quantity\"])","","    if purchase_quantity > current_stock:","        return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","","    new_stock = current_stock - purchase_quantity","","    table.update_item(","        Key={\"product_id\": product_id},","        UpdateExpression=\"SET quantity = :new_quantity\",","        ExpressionAttributeValues={\":new_quantity\": new_stock}","    )","","    return {\"status\": \"success\", \"message\": \"Purchase successful\", \"remaining_stock\": new_stock}",""]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "],"id":236},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":4},"action":"insert","lines":["    "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":4},"action":"insert","lines":["    "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":4},"action":"insert","lines":["    "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"insert","lines":["    "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":105,"column":71},"end":{"row":105,"column":99},"action":"remove","lines":["\"remaining_stock\": new_stock"],"id":237},{"start":{"row":105,"column":70},"end":{"row":105,"column":71},"action":"remove","lines":[" "]},{"start":{"row":105,"column":69},"end":{"row":105,"column":70},"action":"remove","lines":[","]}],[{"start":{"row":78,"column":4},"end":{"row":105,"column":70},"action":"remove","lines":["def purchase_product(self, product_id, purchase_quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        # Get the current stock","        response = table.get_item(Key={\"product_id\": product_id})","        item = response.get(\"Item\")","    ","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","    ","        current_stock = int(item[\"quantity\"])","    ","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","    ","        new_stock = current_stock - purchase_quantity","    ","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )","    ","        return {\"status\": \"success\", \"message\": \"Purchase successful\"}"],"id":238},{"start":{"row":78,"column":4},"end":{"row":113,"column":0},"action":"insert","lines":["def purchase_product(self, product_id=None, product_name=None, purchase_quantity=0):","    import boto3","    from boto3.dynamodb.conditions import Key","","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    if not (product_id or product_name):","        return {\"status\": \"error\", \"message\": \"Product ID or Product Name is required\"}","","    # Retrieve product by ID or Name","    if product_id:","        response = table.get_item(Key={\"product_id\": product_id})","    else:","        response = table.scan(FilterExpression=Key(\"product_name\").eq(product_name))","","    item = response.get(\"Item\") if product_id else (response.get(\"Items\")[0] if response.get(\"Items\") else None)","","    if not item:","        return {\"status\": \"error\", \"message\": \"Product not found\"}","","    current_stock = int(item[\"quantity\"])","","    if purchase_quantity > current_stock:","        return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","","    new_stock = current_stock - purchase_quantity","","    table.update_item(","        Key={\"product_id\": item[\"product_id\"]},","        UpdateExpression=\"SET quantity = :new_quantity\",","        ExpressionAttributeValues={\":new_quantity\": new_stock}","    )","","    return {\"status\": \"success\", \"message\": \"Purchase successful\"}",""]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "],"id":239},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":4},"action":"insert","lines":["    "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":4},"action":"insert","lines":["    "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":4},"action":"insert","lines":["    "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"insert","lines":["    "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":4},"action":"insert","lines":["    "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"insert","lines":["    "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":4},"action":"insert","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"insert","lines":["    "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":4},"action":"insert","lines":["    "]},{"start":{"row":110,"column":0},"end":{"row":110,"column":4},"action":"insert","lines":["    "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["    "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":78,"column":4},"end":{"row":113,"column":0},"action":"remove","lines":["def purchase_product(self, product_id=None, product_name=None, purchase_quantity=0):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        if not (product_id or product_name):","            return {\"status\": \"error\", \"message\": \"Product ID or Product Name is required\"}","    ","        # Retrieve product by ID or Name","        if product_id:","            response = table.get_item(Key={\"product_id\": product_id})","        else:","            response = table.scan(FilterExpression=Key(\"product_name\").eq(product_name))","    ","        item = response.get(\"Item\") if product_id else (response.get(\"Items\")[0] if response.get(\"Items\") else None)","    ","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","    ","        current_stock = int(item[\"quantity\"])","    ","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","    ","        new_stock = current_stock - purchase_quantity","    ","        table.update_item(","            Key={\"product_id\": item[\"product_id\"]},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )","    ","        return {\"status\": \"success\", \"message\": \"Purchase successful\"}",""],"id":240},{"start":{"row":78,"column":4},"end":{"row":115,"column":0},"action":"insert","lines":["def purchase_product(self, product_id=None, product_name=None, purchase_quantity=0):","    import boto3","    from boto3.dynamodb.conditions import Key","    ","    dynamodb = boto3.resource(\"dynamodb\")","    table = dynamodb.Table(self.table_name)","","    # Validate inputs","    if not (product_id or product_name) or purchase_quantity <= 0:","        return {\"status\": \"error\", \"message\": \"Invalid product ID, product name, or purchase quantity\"}","","    # Retrieve product by ID or Name","    if product_id:","        response = table.get_item(Key={\"product_id\": product_id})","        item = response.get(\"Item\")","    else:","        response = table.scan(FilterExpression=Key(\"product_name\").eq(product_name))","        items = response.get(\"Items\", [])","        item = items[0] if items else None","","    if not item:","        return {\"status\": \"error\", \"message\": \"Product not found\"}","","    # Check stock availability","    current_stock = int(item[\"quantity\"])","    if purchase_quantity > current_stock:","        return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","","    # Update stock","    new_stock = current_stock - purchase_quantity","    table.update_item(","        Key={\"product_id\": item[\"product_id\"]},","        UpdateExpression=\"SET quantity = :new_quantity\",","        ExpressionAttributeValues={\":new_quantity\": new_stock}","    )","","    return {\"status\": \"success\", \"remaining_stock\": new_stock}",""]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "],"id":241},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":4},"action":"insert","lines":["    "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":4},"action":"insert","lines":["    "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":4},"action":"insert","lines":["    "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"insert","lines":["    "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":4},"action":"insert","lines":["    "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["    "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":4},"action":"insert","lines":["    "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"insert","lines":["    "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"insert","lines":["    "]},{"start":{"row":104,"column":0},"end":{"row":104,"column":4},"action":"insert","lines":["    "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":4},"action":"insert","lines":["    "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"insert","lines":["    "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":4},"action":"insert","lines":["    "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"insert","lines":["    "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":4},"action":"insert","lines":["    "]},{"start":{"row":110,"column":0},"end":{"row":110,"column":4},"action":"insert","lines":["    "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["    "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"insert","lines":["    "]},{"start":{"row":113,"column":0},"end":{"row":113,"column":4},"action":"insert","lines":["    "]},{"start":{"row":114,"column":0},"end":{"row":114,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":78,"column":4},"end":{"row":114,"column":66},"action":"remove","lines":["def purchase_product(self, product_id=None, product_name=None, purchase_quantity=0):","        import boto3","        from boto3.dynamodb.conditions import Key","        ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        # Validate inputs","        if not (product_id or product_name) or purchase_quantity <= 0:","            return {\"status\": \"error\", \"message\": \"Invalid product ID, product name, or purchase quantity\"}","    ","        # Retrieve product by ID or Name","        if product_id:","            response = table.get_item(Key={\"product_id\": product_id})","            item = response.get(\"Item\")","        else:","            response = table.scan(FilterExpression=Key(\"product_name\").eq(product_name))","            items = response.get(\"Items\", [])","            item = items[0] if items else None","    ","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","    ","        # Check stock availability","        current_stock = int(item[\"quantity\"])","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","    ","        # Update stock","        new_stock = current_stock - purchase_quantity","        table.update_item(","            Key={\"product_id\": item[\"product_id\"]},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )","    ","        return {\"status\": \"success\", \"remaining_stock\": new_stock}"],"id":242},{"start":{"row":78,"column":4},"end":{"row":105,"column":100},"action":"insert","lines":["def purchase_product(self, product_id, purchase_quantity):","        import boto3","        from boto3.dynamodb.conditions import Key","    ","        dynamodb = boto3.resource(\"dynamodb\")","        table = dynamodb.Table(self.table_name)","    ","        # Get the current stock","        response = table.get_item(Key={\"product_id\": product_id})","        item = response.get(\"Item\")","    ","        if not item:","            return {\"status\": \"error\", \"message\": \"Product not found\"}","    ","        current_stock = int(item[\"quantity\"])","    ","        if purchase_quantity > current_stock:","            return {\"status\": \"error\", \"message\": \"Not enough stock available\"}","    ","        new_stock = current_stock - purchase_quantity","    ","        table.update_item(","            Key={\"product_id\": product_id},","            UpdateExpression=\"SET quantity = :new_quantity\",","            ExpressionAttributeValues={\":new_quantity\": new_stock}","        )","    ","        return {\"status\": \"success\", \"message\": \"Purchase successful\", \"remaining_stock\": new_stock}"]}],[{"start":{"row":18,"column":4},"end":{"row":34,"column":23},"action":"remove","lines":["def process_sqs_messages(self, event):","        fieldnames = [\"product_id\", \"product_name\", \"price\", \"quantity\"]","        ","        file_prefix = generate_code(\"pycon_\", 8)","        filename = f'product_created_{file_prefix}.csv'","        ","        products = []","        for record in event.get(\"Records\", []):","            try:","                product = json.loads(record[\"body\"])","                products.append(product)","            except (json.JSONDecodeError, KeyError):","                continue","                ","        self.s3.create_and_upload_csv(filename, fieldnames, products)","        ","        return filename"],"id":243},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":4},"end":{"row":18,"column":0},"action":"remove","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "]},{"start":{"row":16,"column":35},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":1114,"scrollleft":0,"selection":{"start":{"row":76,"column":45},"end":{"row":76,"column":45},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":78,"state":"start","mode":"ace/mode/python"}},"timestamp":1741833933104,"hash":"b1dd61cba4832fdf5a8c59533941db81b710d23b"}