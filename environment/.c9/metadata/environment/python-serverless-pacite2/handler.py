{"filter":false,"title":"handler.py","tooltip":"/python-serverless-pacite2/handler.py","ace":{"folds":[],"scrolltop":394.4,"scrollleft":0,"selection":{"start":{"row":30,"column":27},"end":{"row":30,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":30,"state":"start","mode":"ace/mode/python"}},"hash":"c897a31fdff14748ae5d018a8417ba5a52781bc4","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":34,"column":33},"end":{"row":34,"column":34},"action":"insert","lines":["2"],"id":2}],[{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"insert","lines":["2"],"id":3}],[{"start":{"row":62,"column":45},"end":{"row":62,"column":70},"action":"remove","lines":["products-queue-pacite-sqs"],"id":4},{"start":{"row":62,"column":45},"end":{"row":62,"column":69},"action":"insert","lines":["products-bucket-pacite2 "]}],[{"start":{"row":62,"column":68},"end":{"row":62,"column":69},"action":"remove","lines":[" "],"id":5}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"insert","lines":["2"],"id":6}],[{"start":{"row":106,"column":36},"end":{"row":106,"column":37},"action":"remove","lines":["1"],"id":7}],[{"start":{"row":106,"column":36},"end":{"row":106,"column":37},"action":"insert","lines":["1"],"id":8}],[{"start":{"row":106,"column":36},"end":{"row":106,"column":37},"action":"remove","lines":["1"],"id":9}],[{"start":{"row":106,"column":36},"end":{"row":106,"column":37},"action":"insert","lines":["2"],"id":10}],[{"start":{"row":0,"column":0},"end":{"row":121,"column":4},"action":"remove","lines":["import json","import boto3","import urllib","import csv","import codecs","import string","import random","from decimal import Decimal","","class DecimalEncoder(json.JSONEncoder):","    def default(self, obj):","        if isinstance(obj, Decimal):","            return str(obj)","        return super().default(obj)","","def hello(event, context):","    body = {","        \"message\": \"We are team Pacite and this is the hello world\",","    }","","    print(\"I added a pretty little print here for debugging\")","","    response = {","        \"statusCode\": 200,","        \"body\": json.dumps(body)","    }","    return response","","def get_all_products(event, context):","    body = {","        \"message\": \"I'm getting all the products\",","        \"input\": event,","    }","    ","    table_name = \"products-pacite2\" # change this to your dynamodb table name","    ","    dynamodb = boto3.resource('dynamodb', region_name='us-east-2')","    table = dynamodb.Table(table_name)","    ","    return_body = {}","    return_body[\"items\"] = table.scan().get('Items')","    ","    return_body[\"status\"] = \"success\"","","    response = {\"statusCode\": 200, \"body\": json.dumps(return_body, cls=DecimalEncoder)}","    ","    return response","","def create_one_product(event, context):","    body = json.loads(event[\"body\"], parse_float=Decimal)","    ","    table_name = \"products-pacite2\" # change this to your dynamodb table name","    dynamodb = boto3.resource('dynamodb', region_name='us-east-2')","    table = dynamodb.Table(table_name)","    ","    table.put_item(","       Item=body","    )","    ","    response = {\"statusCode\": 200, \"body\": json.dumps(body, cls=DecimalEncoder)}","    ","    sqs = boto3.resource('sqs', region_name='us-east-2')","    queue = sqs.get_queue_by_name(QueueName='products-bucket-pacite2')","    ","    # Create a new message","    response = queue.send_message(MessageBody=json.dumps(body, cls=DecimalEncoder))","","    return body","    ","def batch_create_products(event, context):","    print(\"file uploaded trigger\")","    print(event)","    ","    print(\"Extract file location from event payload\")","    bucket = event['Records'][0]['s3']['bucket']['name']","    key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'])","    localFilename = f'/tmp/{key}'","    s3_client = boto3.client('s3', region_name='us-east-2')","    ","    print(\"downloaded file to /tmp folder\")","    s3_client.download_file(bucket, key, localFilename)","    ","    print(\"reading CSV file and looping it over...\")","    ","    with open(localFilename, 'r') as f:","        csv_reader = csv.DictReader(f)","        required_keys = [\"product_id\", \"product_name\", \"price\", \"quantity\"]","        table_name = \"products-pacite2\" # change this to your dynamodb table name","        dynamodb = boto3.resource('dynamodb', region_name='us-east-2')","        table = dynamodb.Table(table_name)","        for row in csv_reader:","            table.put_item(","               Item=row","            )","def generate_code(prefix, string_length):","  letters = string.ascii_uppercase","  return prefix + ''.join(random.choice(letters) for i in range(string_length))","  ","def receive_message_from_sqs(event, context):","    print(\"file uploaded trigger\")","    print(event)","    ","    fieldnames=[\"product_id\", \"product_name\", \"price\", \"quantity\"]","    ","    file_randomized_prefix = generate_code(\"pycon_\", 8)","    file_name = f'/tmp/product_created_{file_randomized_prefix}.csv'","    bucket = \"products-bucket-pacite2\"","    object_name = f'product_created_{file_randomized_prefix}.csv'","    ","    ","    with open(file_name, 'w') as f:","        writer = csv.DictWriter(f, fieldnames=fieldnames)","        for payload in event[\"Records\"]:","            json_payload = json.loads(payload[\"body\"])","            writer.writerow(json_payload)","","   ","    s3_client = boto3.client('s3')","    response = s3_client.upload_file(file_name, bucket, object_name)","    print(\"All done!\")","    return {}","    "],"id":11},{"start":{"row":0,"column":0},"end":{"row":61,"column":5},"action":"insert","lines":["import json","from models.product import ProductModel","from utils.helpers import DecimalEncoder","","def hello(event, context):","    \"\"\"Simple hello world function\"\"\"","    response = {","        \"statusCode\": 200,","        \"body\": json.dumps({\"message\": \"We are team Pacite and this is the hello world\"})","    }","    return response","","def get_all_products(event, context):","    \"\"\"Get all products from the database\"\"\"","    product_model = ProductModel()","    items = product_model.get_all()","    ","    return_body = {","        \"items\": items,","        \"status\": \"success\"","    }","","    response = {","        \"statusCode\": 200,","        \"body\": json.dumps(return_body, cls=DecimalEncoder)","    }","    ","    return response","","def create_one_product(event, context):","    \"\"\"Create a single product\"\"\"","    body = json.loads(event[\"body\"])","    ","    product_model = ProductModel()","    result = product_model.create(body)","    ","    response = {","        \"statusCode\": 200,","        \"body\": json.dumps(result, cls=DecimalEncoder)","    }","    ","    return response","    ","def batch_create_products(event, context):","    \"\"\"Process file uploads to create multiple products\"\"\"","    product_model = ProductModel()","    product_model.batch_create_from_s3_event(event)","    ","    return {","        \"statusCode\": 200,","        \"body\": json.dumps({\"status\": \"success\", \"message\": \"Products batch created successfully\"})","    }","  ","def receive_message_from_sqs(event, context):","    \"\"\"Process SQS messages and create CSV files\"\"\"","    product_model = ProductModel()","    product_model.process_sqs_messages(event)","    ","    return {","        \"statusCode\": 200,","        \"body\": json.dumps({\"status\": \"success\", \"message\": \"SQS messages processed successfully\"})","    }"]}],[{"start":{"row":4,"column":26},"end":{"row":5,"column":37},"action":"remove","lines":["","    \"\"\"Simple hello world function\"\"\""],"id":12}],[{"start":{"row":11,"column":37},"end":{"row":12,"column":44},"action":"remove","lines":["","    \"\"\"Get all products from the database\"\"\""],"id":13}],[{"start":{"row":27,"column":39},"end":{"row":28,"column":33},"action":"remove","lines":["","    \"\"\"Create a single product\"\"\""],"id":14}],[{"start":{"row":40,"column":42},"end":{"row":41,"column":58},"action":"remove","lines":["","    \"\"\"Process file uploads to create multiple products\"\"\""],"id":15}],[{"start":{"row":49,"column":45},"end":{"row":50,"column":51},"action":"remove","lines":["","    \"\"\"Process SQS messages and create CSV files\"\"\""],"id":16}]]},"timestamp":1741240113599}